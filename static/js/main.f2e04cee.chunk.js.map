{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Notifications/Notification.module.css","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Notifications/Notifications.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","addContact","className","styles","title","form","label","input","type","placeholder","onChange","button","Component","Contacts","contacts","onDelete","children","s","list","map","el","item","onClick","id","uuidv4","Filter","Notification","notification","App","filter","checkContact","some","alert","contactData","prevState","deleteContact","filterContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2e04cee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3IdBl\",\"form\":\"Form_form__4VxrB\",\"label\":\"Form_label__X6yZn\",\"input\":\"Form_input__2OfiU\",\"button\":\"Form_button__2QW-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__bu5Xa\",\"item\":\"Contacts_item__2yLhJ\",\"button\":\"Contacts_button__2DDe7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2AB4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1A_T8\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Form extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    const { addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <h2 className={styles.title}>Phonebook</h2>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter the name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder=\"Enter the phone number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={styles.button} onSubmit={addContact}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport s from \"./Contacts.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contacts = ({ contacts, onDelete, children }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n        {contacts.map((el) => (\r\n          <li className={s.item} key={uuidv4()}>\r\n            {`${el.name}: ${el.number}`}\r\n            <button\r\n              className={s.button}\r\n              onClick={() => {\r\n                onDelete(el.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Find contact\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = () => {\r\n  return <p className={s.notification}>You haven't contacts</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Form from \"./components/Form/Form\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport Notification from \"./components/Notifications/Notifications\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  checkContact = (name, number) => {\n    const { contacts } = this.state;\n    const checkedContacts = contacts.some((el) => el.name === name);\n    if (checkedContacts) {\n      return alert(\"This contact is already in your contacts\");\n    }\n    this.addContact(name, number);\n  };\n\n  addContact = (name, number) => {\n    const contactData = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    this.setState((prevState) => ({\n      contacts: [contactData, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  filterContacts = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { contacts, name, filter, number } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Form\n          name={name}\n          number={number}\n          contacts={contacts}\n          onChange={this.handleChange}\n          onSubmit={this.checkContact}\n        ></Form>\n        {contacts.length ? (\n          <Contacts\n            contacts={this.getVisibleContacts()}\n            onDelete={this.deleteContact}\n          >\n            <Filter value={filter} onChange={this.filterContacts}></Filter>\n          </Contacts>\n        ) : (\n          <Notification></Notification>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}